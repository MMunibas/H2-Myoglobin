* GENERATED BY CHARMM-GUI (http://www.chmcmm-gui.org) v3.7 on Jan, 11. 2022. JOBID=4188193050
* INPUT FILE FOR NPT DYNAMICS OF SOLVATED GLOBULAR PROTEIN
*

DIMENS CHSIZE 500000 MAXRES 300000

! Read topology and parameter files
stream toppar.str


! Read PSF
open read unit 10 card name step3_pbcsetup.psf
read psf  unit 10 card

! Read Coordinate
open read unit 10 card name step3_pbcsetup.crd
read coor unit 10 card

!
! Setup PBC (Periodic Boundary Condition)
!

stream step3_pbcsetup.str

open read unit 10 card name crystal_image.str
CRYSTAL DEFINE @XTLtype @A @B @C @alpha @beta @gamma
CRYSTAL READ UNIT 10 CARD

!Image centering by residue
!IMAGE BYRESID XCEN @xcen YCEN @ycen ZCEN @zcen sele resname TIP3 end
!IMAGE BYRESID XCEN @xcen YCEN @ycen ZCEN @zcen sele segid IONS end



calc ahalf = @A / 2.0
calc bhalf = @B / 2.0
calc chalf = @C / 2.0

!coor trans xdir @ahalf ydir @bhalf zdir @chalf sele all end

!IMAGE BYRESID XCEN @xcen YCEN @ycen ZCEN @zcen sele resname TIP3 end
IMAGE BYRESID XCEN @ahalf YCEN @bhalf ZCEN @chalf sele all end

!
! Nonbonded Options
!

!omm on

nbonds atom vatom vfswitch -
       ctonnb 10.0 ctofnb 12.0 cutnb 16.0 cutim 16.0 -
       inbfrq -1 imgfrq -1 wmin 1.0 cdie eps 1.0 -
       ewald pmew fftx @fftx ffty @ffty fftz @fftz  kappa .34 spline order 6

XTBD REPL MORS 111.763853757505 7.47755368e-01 1.94869413e+00 -
       SELE TYPE H1 .AND. SEGID H2 END -
       SELE TYPE H2 .AND. SEGID H2 END


! Add this block to step4 and step5 e.g. after defining nbonds option
!
! MDCM
!
energy

OPEN UNIT 40 CARD READ NAME charges6_h2_sym.dcm
DCM IUDCM 40 TSHIFT
CLOSE UNIT 40

!
!use positional restraints for pocket
!


cons hmcm force 0.100 refx 23.954 refy 32.829 refz 34.951 sele (resname H2 .and. resid 156 .and. type H1) .or. (resname H2 .and. resid 156 .and. type H2) end

cons hmcm force 0.500 refx 18.936 refy 40.514 refz 33.716 sele resname TRP .and. resid 7 .and. type C end
cons hmcm force 0.500 refx 24.061 refy 35.846 refz 29.974 sele resname LEU .and. resid 76 .and. type C end
cons hmcm force 0.500 refx 20.730 refy 29.040 refz 31.400 sele resname GLY .and. resid 80 .and. type C end
cons hmcm force 0.500 refx 25.628 refy 34.072 refz 38.503 sele resname ALA .and. resid 134 .and. type C end
cons hmcm force 0.500 refx 25.709 refy 28.931 refz 38.345 sele resname LEU .and. resid 137 .and. type C end
cons hmcm force 0.500 refx 28.657 refy 28.573 refz 37.766 sele resname PHE .and. resid 138 .and. type C end

define REFP sele (bynum 2460) end
cons harm force 1.0 sele REFP end


!
! NPT dynamics:
! you can change
! nstep  : number of MD steps
! nprint : print-out frequency
! nsavc  : the trajectory saving frequency
!

! estimate Pmass from SYSmass (total system mass)
! [there could be problems with exreme values, such as  Pmass << SYSmass or Pmass >> SYSmass

scalar mass stat
calc Pmass = int ( ?stot  /  50.0 )

set nstep = 400000
set temp = 303.15

shake bonh param fast sele .not. segid H2 end

open read  unit 11 card name prep.res
open write unit 12 card name dyna1.res
open write unit 13 file name dyna1.dcd

DYNA CPT leap restart time 0.00025 nstep @nstep -
     nprint 1000 iprfrq 1000 ntrfrq 500 -
     iunread 11 iunwri 12 iuncrd 13 iunvel -1 kunit -1 -
     nsavc 4 nsavv 0 -
     PCONSTANT pref   1.0  pmass @Pmass  pgamma   20.0 -
     HOOVER    reft @temp  tmass 2000.0  tbath   @temp  firstt @temp


open write unit 10 card name dyna1.pdb
write coor unit 10 pdb
close unit 10

open write unit 10 card name dyna1.crd
write coor unit 10 card
close unit 10


set io  1
set in  2
label loop

open unit 11 form read name dyna@io.res
open unit 12 form write name dyna@in.res
open unit 13 unfo write name dyna@in.dcd

DYNA CPT leap restart time 0.00025 nstep @nstep -
     nprint 1000 iprfrq 1000 ntrfrq 1000 -
     iunread 11 iunwri 12 iuncrd 13 iunvel -1 kunit -1 -
     nsavc 4 nsavv 0 -
     PCONSTANT pref   1.0  pmass @Pmass  pgamma   20.0 -
     HOOVER    reft @temp  tmass 2000.0  tbath   @temp  firstt @temp

open unit 1 write card name dyna@in.crd
write coor card unit 1
close unit 1

open write unit 10 card name dyna@in.pdb
write coor unit 10 pdb
close unit 10

close unit 11
close unit 12
close unit 13


incr io by 1
incr in by 1
if in le 20  goto loop


